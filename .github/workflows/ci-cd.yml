name: CI-CD for LifeOnHana

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  repository_dispatch: # 서브모듈에서 트리거되는 이벤트
    types:
      - submodule-update

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      with:
        submodules: recursive
        token: ${{ secrets.GH_ACCESS_TOKEN }} 

    - name: sync submodule
      run: |
        git submodule sync
        git submodule update --init --recursive

    - name: Set up Java (Backend)
      uses: actions/setup-java@v3
      with:
        distribution: 'temurin'
        java-version: '17'

    # Backend 빌드
    - name: Build Backend 
      working-directory: ./LifeOnHana_BE
      run: |
        chmod +x gradlew
        ./gradlew clean bootJar -x test
#
#    # pnpm 설치
#    - name: Install pnpm
#      uses: pnpm/action-setup@v2
#      with:
#        version: 8

#    - name: Set up Node.js (Frontend)
#      uses: actions/setup-node@v3
#      with:
#        node-version: '20'
#        cache: 'pnpm'
#        cache-dependency-path: './LifeOnHana_FE/life_on_hana/pnpm-lock.yaml'

#    # Frontend 빌드
#    - name: Build Frontend
#      working-directory: ./LifeOnHana_FE/life_on_hana
#      run: |
#        pnpm install
#        pnpm build

    # 빌드 파일 EC2로 전송
    - name: Copy files to EC2
      uses: appleboy/scp-action@master
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ubuntu
        key: ${{ secrets.EC2_SSH_KEY }}
        source: "LifeOnHana_BE/build/libs/*.jar"
        target: "/home/ubuntu/deploy"

    # EC2에서 배포 실행
    - name: Deploy to EC2
      uses: appleboy/ssh-action@v0.1.7
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ubuntu
        key: ${{ secrets.EC2_SSH_KEY }}
        script: |
          # Kill existing processes
          sudo systemctl stop backend || true
          # pm2 delete frontend || true

          # Backend Deployment
          sudo mv /home/ubuntu/deploy/LifeOnHana_BE/build/libs/*.jar /home/ubuntu/backend/app.jar
          sudo systemctl restart backend
#
#          # Frontend Deployment
#          rm -rf /home/ubuntu/frontend/.next
#          mv /home/ubuntu/deploy/.next /home/ubuntu/frontend/
#          cd /home/ubuntu/frontend
#          pm2 start npm --name "frontend" -- start
